[1mdiff --git a/controlador/dto_user.py b/controlador/dto_user.py[m
[1mdeleted file mode 100644[m
[1mindex 5d50658..0000000[m
[1m--- a/controlador/dto_user.py[m
[1m+++ /dev/null[m
[36m@@ -1,47 +0,0 @@[m
[31m-from modelo.user import User[m
[31m-from dao.dao_user import daoUser[m
[31m-from utils.encoder import Encoder[m
[31m-from datetime import datetime[m
[31m-[m
[31m-class UserDTO:[m
[31m-    def cargaUsuariosBase(self):[m
[31m-        daouser = daoUser()[m
[31m-        resultado = daouser.cargaUsuariosBase()[m
[31m-        if resultado is not None:[m
[31m-            for u in resultado:[m
[31m-                usuario = User(username=u[0], email=u[1], password=u[2], create_time=u[3])[m
[31m-                usuario.getListaUser().append(usuario)[m
[31m-            [m
[31m-    def listarUsuarios(self):[m
[31m-        usuario = User("")[m
[31m-        return usuario.getListaUser()[m
[31m-[m
[31m-    def buscarUsuario(self, username):[m
[31m-        #Para ir a buscarlo a la base de datos[m
[31m-        daouser = daoUser()[m
[31m-        resultado = daouser.buscarUsuario(User(username=username))[m
[31m-        return User(resultado[0], resultado[1], resultado[2]) if resultado is not None else None[m
[31m-        #Para ir a buscarlo a la lista[m
[31m-        """usuario = User("")[m
[31m-        for u in usuario.getListaUser():[m
[31m-            #if u.getUsername()== username:[m
[31m-                return u[m
[31m-        return None"""[m
[31m-[m
[31m-    def validarLogin(self, username, clave):[m
[31m-        daouser = daoUser()[m
[31m-        resultado = daouser.validarLogin(User(username=username))[m
[31m-        return User(resultado[0]) if resultado is not None and Encoder().decode(clave,resultado[1]) else None[m
[31m-    def actualizarUsuario(self, username, email, password):[m
[31m-        daouser = daoUser()[m
[31m-        resultado = daouser.actualizarUsuario(User(username=username, email=email, password=Encoder().encode(password)))[m
[31m-        return resultado[m
[31m-    def eliminarUsuario(self, username):[m
[31m-        daouser = daoUser()[m
[31m-        resultado = daouser.eliminarUsuario(User(username=username))[m
[31m-        return resultado[m
[31m-    def agregarUsuario(self, username, email, password):[m
[31m-        daouser = daoUser()[m
[31m-        resultado = daouser.agregarUsuario(User(username=username, email=email, create_time= datetime.now(), password=Encoder().encode(password)))[m
[31m-        return resultado[m
[31m-    [m
[1mdiff --git a/dao/dao_user.py b/dao/dao_user.py[m
[1mdeleted file mode 100644[m
[1mindex 8ea952b..0000000[m
[1m--- a/dao/dao_user.py[m
[1m+++ /dev/null[m
[36m@@ -1,117 +0,0 @@[m
[31m-from conex import conn[m
[31m-import traceback[m
[31m-[m
[31m-class daoUser:[m
[31m-    def __init__(self):[m
[31m-        try:[m
[31m-            self.__conn = conn.Conex("localhost", "root", "", "arriendos_db")[m
[31m-        except Exception as ex:[m
[31m-            print(ex)[m
[31m-[m
[31m-    def getConex(self):[m
[31m-        return self.__conn[m
[31m-    [m
[31m-    def cargaUsuariosBase(self):[m
[31m-        c = self.getConex()[m
[31m-        result = None[m
[31m-        try:[m
[31m-            cursor = c.getConex().cursor()[m
[31m-            cursor.execute("select username, email, password, create_time from user")[m
[31m-            result = cursor.fetchall()[m
[31m-        except Exception as ex:[m
[31m-            print(ex)[m
[31m-        finally:[m
[31m-            c.closeConex()[m
[31m-        return result[m
[31m-    [m
[31m-    def buscarUsuario(self, user):[m
[31m-        sql = "select username, email, password, create_time from user where username = %s"[m
[31m-        resultado = None[m
[31m-        c = self.getConex()[m
[31m-[m
[31m-        try:[m
[31m-            cursor = c.getConex().cursor()[m
[31m-            cursor.execute(sql, (user.getUsername(),))[m
[31m-            #fetchone, rescata del cursor una sola fila (tupla)[m
[31m-            resultado = cursor.fetchone()[m
[31m-[m
[31m-        except Exception as ex:[m
[31m-            print(traceback.print_exc())[m
[31m-        finally:[m
[31m-            c.closeConex()[m
[31m-        return resultado[m
[31m-[m
[31m-    def validarLogin(self,user):[m
[31m-        sql = "select username, password from user where username = %s"[m
[31m-        resultado = None[m
[31m-        c = self.getConex()[m
[31m-        try:[m
[31m-            cursor = c.getConex().cursor()[m
[31m-            cursor.execute(sql, (user.getUsername(),))[m
[31m-            resultado = cursor.fetchone()[m
[31m-        except Exception as ex:[m
[31m-            print(traceback.print_exc())[m
[31m-        finally:[m
[31m-            c.closeConex()[m
[31m-        [m
[31m-        return resultado[m
[31m-    def actualizarUsuario(self, user):[m
[31m-        sql = "update user set email=%s, password = %s where username = %s"[m
[31m-        c = self.getConex()[m
[31m-        mensaje = ""[m
[31m-        try:[m
[31m-            cursor = c.getConex().cursor()[m
[31m-            cursor.execute(sql, (user.getEmail(), user.getPassword(), user.getUsername()))[m
[31m-            c.getConex().commit()[m
[31m-            filas = cursor.rowcount[m
[31m-            if filas > 0:[m
[31m-                mensaje ="Datos modificados satisfactoriamente"[m
[31m-            else:[m
[31m-                mensaje="No se realizaron cambios"[m
[31m-        except Exception as ex:[m
[31m-            print(traceback.print_exc())[m
[31m-            mensaje = "Problemas con la base de datos..vuelva a intentarlo"[m
[31m-        finally:[m
[31m-            c.closeConex()[m
[31m-        return mensaje[m
[31m-    def eliminarUsuario(self, user):[m
[31m-        sql = "delete from user  where username = %s"[m
[31m-        c = self.getConex()[m
[31m-        mensaje = ""[m
[31m-        try:[m
[31m-            cursor = c.getConex().cursor()[m
[31m-            cursor.execute(sql, (user.getUsername(),))[m
[31m-            c.getConex().commit()[m
[31m-            filas = cursor.rowcount[m
[31m-            if filas > 0:[m
[31m-                mensaje ="Usuario eliminado satisfactoriamente"[m
[31m-            else:[m
[31m-                mensaje="No se realizaron cambios"[m
[31m-        except Exception as ex:[m
[31m-            print(traceback.print_exc())[m
[31m-            mensaje = "Problemas con la base de datos..vuelva a intentarlo"[m
[31m-        finally:[m
[31m-            c.closeConex()[m
[31m-        return mensaje[m
[31m-    def agregarUsuario(self,user):[m
[31m-        sql = "insert into user (username, email, password, create_time) values (%s,%s,%s,%s)"[m
[31m-        c = self.getConex()[m
[31m-        mensaje = ""[m
[31m-        try:[m
[31m-            cursor = c.getConex().cursor()[m
[31m-            cursor.execute(sql, (user.getUsername(),user.getEmail(), user.getPassword(),user.getCreate_time()))[m
[31m-            c.getConex().commit()[m
[31m-            filas = cursor.rowcount[m
[31m-            if filas > 0:[m
[31m-                mensaje ="Datos agregados satisfactoriamente"[m
[31m-            else:[m
[31m-                mensaje="No se realizaron cambios"[m
[31m-        except Exception as ex:[m
[31m-            print(traceback.print_exc())[m
[31m-            mensaje = "Problemas con la base de datos..vuelva a intentarlo"[m
[31m-        finally:[m
[31m-            c.closeConex()[m
[31m-        return mensaje[m
[31m-[m
[31m-[m
[31m-[m
[1mdiff --git a/modelo/user.py b/modelo/user.py[m
[1mdeleted file mode 100644[m
[1mindex ee910bf..0000000[m
[1m--- a/modelo/user.py[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-from datetime import datetime[m
[31m-[m
[31m-class User:[m
[31m-    __listaUser = [][m
[31m-    def __init__(self, username, email="", password="", create_time=datetime.now()):[m
[31m-        self.__username = username[m
[31m-        self.__email = email[m
[31m-        self.__password = password[m
[31m-        self.__create_time = create_time[m
[31m-[m
[31m-    def __str__(self):[m
[31m-        return "{0} {1} {2}".format(self.__username, self.__email, self.__create_time)[m
[31m-    def getListaUser(self):[m
[31m-        return self.__listaUser[m
[31m-    def getUsername(self):[m
[31m-        return self.__username[m
[31m-    def getEmail(self):[m
[31m-        return self.__email[m
[31m-    def getPassword(self):[m
[31m-        return self.__password[m
[31m-    def getCreate_time(self):[m
[31m-        return self.__create_time[m
[31m-    def setEmail(self, email):[m
[31m-        self.__email = email[m
\ No newline at end of file[m
